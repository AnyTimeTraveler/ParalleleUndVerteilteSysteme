%
% Queue.mcrl2
%
% Simple example of a queue.
%
% Copyright (c) 2018-2020
% Hochschule Emden/Leer - University of Applied Sciences Emden/Leer
% All Rights Reserved.
%
% @version 1.00 - 03 Oct 2018 - GJV - initial version 
% @version 1.10 - 01 Apr 2020 - GJV - small changes in layout & comments 
%

% -----------------------------------------------------------------------------------------------------------------------

% --- definition of the data elements
sort
	Data;

cons	
	a, b, c : Data;			% a number of data elements
	nil : Data;				% 'nil' is a special data element

% --- definition of the queue	
sort
	Queue;

cons
	empty : Queue;
	q : Data # Queue -> Queue;

map
	enqueue : Data # Queue -> Queue;	% adds an element to the queue
	dequeue : Queue -> Queue;			% removes the last element from the back of the queue
	back : Queue -> Data;				% returns the last element from the queue
	front : Queue -> Data;				% returns the first element from the queue 

var
	x, y : Queue;
	d, e : Data;

eqn
	enqueue(d, x) = q(d, x);				% the outer element is the back of the queue

	dequeue(empty) = empty;
	dequeue(q(d, empty)) = empty;
	dequeue(q(e, q(d, x))) = q(e, dequeue(q(d, x)));

	back(empty) = nil;
	back(q(d, x)) = d;

	front(empty) = nil;
	front(q(d, empty)) = d;
	front(q(e, q(d, x))) = front(q(d, x));

% --- tests ---

map
	q1, q2 : Queue;
	d1, d2 : Data;
	
eqn
	q1 = enqueue(c, enqueue(b, enqueue(a, empty)));
	q2 = dequeue(q1);
	d1 = front(q1);
	d2 = back(q1);